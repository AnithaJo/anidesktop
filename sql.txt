using SignalRDbUpdates.Hubs;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
 
namespace SignalRDbUpdates.Models
{
    public class MessagesRepository
    {
       string connString = ConfigurationManager.ConnectionStrings["DB"].ConnectionString;
 
        public IEnumerable<Messages> GetAllMessages()
        {
            var messages = new List<Messages>();
            using (var connection = new SqlConnection(connString))
            {
                connection.Open();
                using (var command = new SqlCommand(@" SELECT [Percentage_Alarm],
                [Percentage_Prealarm], [Raw_Analog_Value_ms] FROM [dbo].[SmokeDet] ", connection))
                {
                    command.Notification = null;
 
                    var dependency = new SqlDependency(command);
                    dependency.OnChange += new OnChangeEventHandler(dependency_OnChange);
 
                    if (connection.State == ConnectionState.Closed)
                        connection.Open();
 
                    var reader = command.ExecuteReader();
 
                    while (reader.Read())
                    {
                        messages.Add(item: new Messages { Percentage_Alarm = (int)reader["Percentage_Alarm"], Percentage_Prealarm = (int) reader["Percentage_Prealarm"], Raw_Analog_Value_ms = (int)reader["Raw_Analog_Value_ms"] });
                    }
                }
             
            }
            return messages;
          
            
        }
 
        private void dependency_OnChange(object sender, SqlNotificationEventArgs e)
        {
            if (e.Type == SqlNotificationType.Change)
            {
                MessagesHub.SendMessages();
            }
        }
    }s
}